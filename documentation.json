{
    "pipes": [],
    "interfaces": [
        {
            "name": "Recipe",
            "id": "interface-Recipe-fce4f8ebf845e21be4d02f6cd68c2a4d",
            "file": "src/app/recipes/recipe.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Recipe {\n  id: string;\n  title: string;\n  imageUrl: string;\n  ingredients: string[];\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "ingredients",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-7160d97ba71005e0c8f4f07072db9ff8",
            "file": "src/app/auth/auth.service.ts",
            "properties": [
                {
                    "name": "_userId",
                    "defaultValue": "'abc'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_userIsAuthenticated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _userIsAuthenticated = true;\n  private _userId = 'abc';\n\n  get userIsAuthenticated() {\n    // eslint-disable-next-line no-underscore-dangle\n    return this._userIsAuthenticated;\n  }\n\n  get userId() {\n    return this._userId;\n  }\n\n  constructor() { }\n\n  login() {\n    // eslint-disable-next-line no-underscore-dangle\n    this._userIsAuthenticated = true;\n  }\n\n  logout() {\n    // eslint-disable-next-line no-underscore-dangle\n    this._userIsAuthenticated = false;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "accessors": {
                "userIsAuthenticated": {
                    "name": "userIsAuthenticated",
                    "getSignature": {
                        "name": "userIsAuthenticated",
                        "type": "",
                        "returnType": "",
                        "line": 12
                    }
                },
                "userId": {
                    "name": "userId",
                    "getSignature": {
                        "name": "userId",
                        "type": "",
                        "returnType": "",
                        "line": 17
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "BookingService",
            "id": "injectable-BookingService-98f9306cb54c83b3cfcfdad8b54e8e48",
            "file": "src/app/bookings/booking.service.ts",
            "properties": [
                {
                    "name": "_bookings",
                    "defaultValue": "[\n    {\n      id: 'xyz',\n      placeId: 'p1',\n      placeTitle: 'Manhattan Mansion',\n      guestNumber: 2,\n      userId: 'abc',\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Booking[]",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Place } from '../places/place.model';\nimport { Booking } from './booking.module';\n\n@Injectable({ providedIn: 'root' })\nexport class BookingService {\n  private _bookings: Booking[] = [\n    {\n      id: 'xyz',\n      placeId: 'p1',\n      placeTitle: 'Manhattan Mansion',\n      guestNumber: 2,\n      userId: 'abc',\n    }\n  ];\n\n  get bookings() {\n    // eslint-disable-next-line no-underscore-dangle\n    return [...this._bookings];\n  }\n}\n",
            "accessors": {
                "bookings": {
                    "name": "bookings",
                    "getSignature": {
                        "name": "bookings",
                        "type": "",
                        "returnType": "",
                        "line": 17
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "PlacesService",
            "id": "injectable-PlacesService-c8cc908d9ea46a8c9270479b35bdc09f",
            "file": "src/app/places/places.service.ts",
            "properties": [
                {
                    "name": "_places",
                    "defaultValue": "new BehaviorSubject<Place[]>([\n    new Place(\n      'p1',\n      'Manhattan Mansion',\n      'In the heart of New Your City.',\n      'https://imgs.6sqft.com/wp-content/uploads/2014/06/21042533/Carnegie-Mansion-nyc.jpg',\n      149.99,\n      new Date('2019-01-01'),\n      new Date('2019-12-31'),\n      'abc'\n    ),\n    new Place(\n      'p2',\n      'L\\'Amour Toujours',\n      'A romattic place in Paris!',\n      'https://live.staticflickr.com/614/31628747276_00dedc1560_b.jpg',\n      189.99,\n      new Date('2019-01-01'),\n      new Date('2019-12-31'),\n      'abc'\n    ),\n    new Place(\n      'p3',\n      'The Foggy Palace',\n      'Not your average city trip!',\n      'https://i1.trekearth.com/photos/138102/dsc_0681.jpg',\n      99.99,\n      new Date('2019-01-01'),\n      new Date('2019-12-31'),\n      'abc'\n    ),\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addPlace",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "price",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dateFrom",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dateTo",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "price",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dateFrom",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dateTo",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPlace",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updatePlace",
                    "args": [
                        {
                            "name": "placeId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "placeId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { stringify } from 'querystring';\nimport { BehaviorSubject } from 'rxjs';\nimport { take, map, tap, delay } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport { Place } from './place.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlacesService {\n  private _places = new BehaviorSubject<Place[]>([\n    new Place(\n      'p1',\n      'Manhattan Mansion',\n      'In the heart of New Your City.',\n      'https://imgs.6sqft.com/wp-content/uploads/2014/06/21042533/Carnegie-Mansion-nyc.jpg',\n      149.99,\n      new Date('2019-01-01'),\n      new Date('2019-12-31'),\n      'abc'\n    ),\n    new Place(\n      'p2',\n      'L\\'Amour Toujours',\n      'A romattic place in Paris!',\n      'https://live.staticflickr.com/614/31628747276_00dedc1560_b.jpg',\n      189.99,\n      new Date('2019-01-01'),\n      new Date('2019-12-31'),\n      'abc'\n    ),\n    new Place(\n      'p3',\n      'The Foggy Palace',\n      'Not your average city trip!',\n      'https://i1.trekearth.com/photos/138102/dsc_0681.jpg',\n      99.99,\n      new Date('2019-01-01'),\n      new Date('2019-12-31'),\n      'abc'\n    ),\n  ]);\n\n  get places() {\n    // eslint-disable-next-line no-underscore-dangle\n    return this._places.asObservable();\n  }\n\n  constructor(private authService: AuthService) { }\n\n  getPlace(id: string) {\n    // eslint-disable-next-line no-underscore-dangle\n    return this.places.pipe(\n      take(1),\n      map(places => {\n        return {...places.find(p => p.id === id)};\n      })\n    );\n\n  }\n\n  addPlace(title: string, description: string, price: number, dateFrom:  Date, dateTo: Date) {\n    const newPlace = new Place(\n      Math.random().toString(),\n      title,\n      description,\n      'https://i1.trekearth.com/photos/138102/dsc_0681.jpg',\n      price,\n      dateFrom,\n      dateTo,\n      this.authService.userId,\n    );\n    return this.places.pipe(\n      take(1),\n      delay(1000),\n      tap(places => {\n        this._places.next(places.concat(newPlace));\n      })\n    );\n  }\n\n  updatePlace(placeId: string, title: string, description: string) {\n    return this.places.pipe(\n      take(1),\n      delay(1000),\n      tap(places => {\n        const updatedPlaceIndex = places.findIndex(pl => pl.id === placeId);\n        const updatedPlaces = [...places];\n        const oldPlace = updatedPlaces[updatedPlaceIndex];\n        updatedPlaces[updatedPlaceIndex] = new Place(\n          oldPlace.id,\n          title,\n          description,\n          oldPlace.imageUrl,\n          oldPlace.price,\n          oldPlace.availableFrom,\n          oldPlace.availableTo,\n          oldPlace.userId,\n        );\n        this._places.next(updatedPlaces);\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "places": {
                    "name": "places",
                    "getSignature": {
                        "name": "places",
                        "type": "",
                        "returnType": "",
                        "line": 47
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "RecipesService",
            "id": "injectable-RecipesService-3138d2bfd0a5276d54101381e3ed1ea1",
            "file": "src/app/recipes/recipes.service.ts",
            "properties": [
                {
                    "name": "recipes",
                    "defaultValue": "[\n    {\n      id: 'r1',\n      title: 'Schnitzel',\n      imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Wiener-Schnitzel02.jpg/440px-Wiener-Schnitzel02.jpg',\n      ingredients: ['French Fries', 'Pork Meat', 'Salad']\n    },\n    {\n      id: 'r2',\n      title: 'Spaghetti',\n      imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/98/Spaghetti_all%27_arrabbiata.jpg?1625808365108',\n      ingredients: ['Spaghetti', 'Meat', 'Tomatoes']\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Recipe[]",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "deleteRecipe",
                    "args": [
                        {
                            "name": "recipeId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "recipeId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAllRecipes",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getRecipe",
                    "args": [
                        {
                            "name": "recipeId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "recipeId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Recipe } from './recipe.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipesService {\n  private recipes: Recipe[] = [\n    {\n      id: 'r1',\n      title: 'Schnitzel',\n      imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Wiener-Schnitzel02.jpg/440px-Wiener-Schnitzel02.jpg',\n      ingredients: ['French Fries', 'Pork Meat', 'Salad']\n    },\n    {\n      id: 'r2',\n      title: 'Spaghetti',\n      imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/98/Spaghetti_all%27_arrabbiata.jpg?1625808365108',\n      ingredients: ['Spaghetti', 'Meat', 'Tomatoes']\n    }\n  ];\n\n  constructor() { }\n\n  getAllRecipes() {\n    return [...this.recipes];\n  }\n\n  getRecipe(recipeId: string){\n    return {\n      ...this.recipes.find(recipe => recipe.id === recipeId)\n    };\n  }\n\n  deleteRecipe(recipeId: string){\n    this.recipes=this.recipes.filter(recipe => recipe.id !== recipeId);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-24c653cbe94477d97d38b86c3374f3ad",
            "file": "src/app/auth/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canLoad",
                    "args": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "segments",
                            "type": "UrlSegment[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "segments",
                            "type": "UrlSegment[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanLoad, Route, Router, UrlSegment, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanLoad {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if(!this.authService.userIsAuthenticated) {\n      this.router.navigateByUrl('/auth');\n    }\n    return this.authService.userIsAuthenticated;\n  };\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-0fb49cd10dd7c20b56e1ec9223a089df",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.deepCss('app-root ion-content')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getParagraphText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Booking",
            "id": "class-Booking-c17667d9529ec844b15731d39c6a2475",
            "file": "src/app/bookings/booking.module.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Booking {\n  constructor(\n    public id: string,\n    public placeId: string,\n    public userId: string,\n    public placeTitle: string,\n    public guestNumber: number,\n  ) { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "placeId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "placeTitle",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "guestNumber",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "placeId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "placeTitle",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "guestNumber",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "guestNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "placeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "placeTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Place",
            "id": "class-Place-447dedbe8a243199a4a31289f1047111",
            "file": "src/app/places/place.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Place {\n   constructor(\n     public id: string,\n     public title: string,\n     public description: string,\n     public imageUrl: string,\n     public price: number,\n     public availableFrom: Date,\n     public availableTo: Date,\n     public userId: string,\n    ) {}\n }\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "imageUrl",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "price",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "availableFrom",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "availableTo",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "imageUrl",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "price",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "availableFrom",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "availableTo",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "availableFrom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "availableTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-727cc4612eff1abc912672fdc16d068d",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigateByUrl('/auth');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ion-app>\n  <ion-menu side=\"start\">\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>\n          PairBnB\n        </ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list>\n        <ion-menu-toggle>\n          <ion-item lines=\"none\" routerLink=\"/places/tabs/discover\" button>\n            <ion-icon name=\"business\" slot=\"start\"></ion-icon>\n            <ion-label>Discover Places</ion-label>\n          </ion-item>\n        </ion-menu-toggle>\n        <ion-menu-toggle>\n          <ion-item lines=\"none\" routerLink=\"/bookings\" button>\n            <ion-icon name=\"checkbox-outline\" slot=\"start\"></ion-icon>\n            <ion-label>Your Bookings</ion-label>\n          </ion-item>\n        </ion-menu-toggle>\n        <ion-menu-toggle>\n          <ion-item lines=\"none\" (click)=\"onLogout()\" button>\n            <ion-icon name=\"exit\" slot=\"start\"></ion-icon>\n            <ion-label>Logout</ion-label>\n          </ion-item>\n        </ion-menu-toggle>\n      </ion-list>\n    </ion-content>\n\n  </ion-menu>\n  <ion-router-outlet main></ion-router-outlet>\n</ion-app>\n"
        },
        {
            "name": "AuthPage",
            "id": "component-AuthPage-2a70237d13a21da994b5729cc4f7b151",
            "file": "src/app/auth/auth.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth",
            "styleUrls": [
                "./auth.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./auth.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IonContent",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "IonContent"
                        }
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "isLogin",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "myForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgForm",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'f'"
                        }
                    ]
                },
                {
                    "name": "myFormEl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'f', {read: ElementRef}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "form",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "NgForm",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSwitchAuthMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IonContent, LoadingController } from '@ionic/angular';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements OnInit {\n\n  isLoading = false;\n  isLogin = true;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private loadingCtrl: LoadingController,\n  ) { }\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  @ViewChild(IonContent) content: IonContent;\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  @ViewChild('f') myForm: NgForm;\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  @ViewChild('f', {read: ElementRef}) myFormEl: ElementRef;\n\n  ngOnInit() {\n    setTimeout(() => {\n      const login = this.myForm.controls.email;\n      login.setErrors({\n        notUnique: true\n      });\n      login.markAsTouched();\n      const formControlTop = this.myFormEl.nativeElement.querySelector('input').offsetTop;\n      this.content.scrollToPoint(0, formControlTop, 300);\n    }, 2000);\n  }\n\n  onLogin() {\n    this.isLoading = true;\n    this.authService.login();\n    this.loadingCtrl.create({\n      keyboardClose: true,\n      // spinner: 'bubbles',\n      message: 'Logging in...'\n    }).then(loadingEl => {\n      loadingEl.present();\n      setTimeout(() => {\n        this.router.navigateByUrl('/places/tabs/discover');\n        loadingEl.dismiss();\n        this.isLoading = false;\n      }, 1000);\n    });\n  }\n\n  onSubmit(form: NgForm){\n    if(!form.valid){\n      return;\n    }\n\n    const email = form.value.email;\n    const password = form.value.password;\n    console.log(email, password);\n\n    if(this.isLogin) {\n      //send a request to login servers\n    } else {\n      //send a request to signup servers\n    }\n  }\n\n  onSwitchAuthMode(){\n    this.isLogin = !this.isLogin;\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./auth.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingCtrl",
                        "type": "LoadingController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingCtrl",
                        "type": "LoadingController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar>\n    <ion-title>{{ isLogin ? 'Login' : 'Signup' }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\" [scrollEvents]=\"true\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n    <ion-grid>\n      <ion-row>\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <ion-list>\n            <ion-item>\n              <ion-label position=\"floating\">E-Mail</ion-label>\n              <ion-input type=\"email\" ngModel name=\"email\" required email #emailCtrl=\"ngModel\"></ion-input>\n            </ion-item>\n            <ion-item *ngIf=\"!emailCtrl.valid && emailCtrl.touched\" lines=\"none\">\n              <ion-label color=\"danger\" class=\"ion-text-right\">Should be a valid email address.</ion-label>\n            </ion-item>\n            <ion-item>\n              <ion-label position=\"floating\">Password</ion-label>\n              <ion-input type=\"password\" ngModel name=\"password\" required minlength=\"6\" #passwordCtrl=\"ngModel\"></ion-input>\n            </ion-item>\n            <ion-item *ngIf=\"!passwordCtrl.valid && passwordCtrl.touched\" lines=\"none\">\n              <ion-label color=\"danger\" class=\"ion-text-right\">Should at least be 6 characters long.</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <ion-button color=\"primary\" type=\"button\" fill=\"clear\" expand=\"block\" (click)=\"onSwitchAuthMode()\">Switch to {{ isLogin ? 'Signup' : 'Login' }}</ion-button>\n          <ion-button color=\"primary\" type=\"submit\" (click)=\"onLogin()\" *ngIf=\"!isLoading\" expand=\"block\" [disabled]=\"!f.valid\">Login</ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </form>\n\n  <br><br><br><br><br><br><br><br><br><br><br>\n  <br><br><br><br><br><br><br><br><br><br><br>\n  <br><br><br><br><br><br><br><br><br><br><br>\n  <br><br><br><br><br><br><br><br><br><br><br>\n  <br><br><br><br><br><br><br><br><br><br><br>\n  <br><br><br><br><br><br><br><br><br><br><br>\n  <br><br><br><br><br><br><br><br><br><br><br>\n  <br><br><br><br><br><br><br><br><br><br><br>\n  <br><br><br><br><br><br><br><br><br><br><br>\n  <br><br><br><br><br><br><br><br><br><br><br>\n  <br><br><br><br><br><br><br><br><br><br><br>\n\n  <!-- <div class=\"ion-text-center\">\n    <ion-spinner color=\"primary\" *ngIf=\"isLoading\"></ion-spinner>\n  </div> -->\n\n</ion-content>\n"
        },
        {
            "name": "BookingsPage",
            "id": "component-BookingsPage-9c931691f05ddf5540fc8a1f0bb6dc07",
            "file": "src/app/bookings/bookings.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-bookings",
            "styleUrls": [
                "./bookings.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bookings.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loadedBookings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Booking[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancelBooking",
                    "args": [
                        {
                            "name": "offerId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "slidingEl",
                            "type": "IonItemSliding",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "offerId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "slidingEl",
                            "type": "IonItemSliding",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { IonItemSliding } from '@ionic/angular';\nimport { Booking } from './booking.module';\nimport { BookingService } from './booking.service';\n\n@Component({\n  selector: 'app-bookings',\n  templateUrl: './bookings.page.html',\n  styleUrls: ['./bookings.page.scss'],\n})\nexport class BookingsPage implements OnInit {\n\n  loadedBookings: Booking[];\n\n  constructor(private bookingsService: BookingService) { }\n\n  ngOnInit() {\n    this.loadedBookings = this.bookingsService.bookings;\n  }\n\n  onCancelBooking(offerId: string, slidingEl: IonItemSliding) {\n    slidingEl.close();\n    //cancel booking with offer ID\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./bookings.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bookingsService",
                        "type": "BookingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "bookingsService",
                        "type": "BookingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>bookings</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-grid>\n    <ion-row>\n      <ion-col size-md=\"6\" offset-md=\"3\">\n        <ion-list>\n          <ion-item-sliding *ngFor=\"let booking of loadedBookings\" #slidingBooking>\n            <ion-item>\n              <ion-label>\n                <h5>{{ booking.placeTitle }}</h5>\n                <p>Guests: {{ booking.guestNumber }}</p>\n              </ion-label>\n            </ion-item>\n            <ion-item-options>\n              <ion-item-option color=\"danger\" (click)=\"onCancelBooking(booking.id, slidingBooking)\">\n                <ion-icon name=\"trash\" slot=\"icon-only\"></ion-icon>\n              </ion-item-option>\n            </ion-item-options>\n          </ion-item-sliding>\n        </ion-list>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n</ion-content>\n"
        },
        {
            "name": "CreateBookingComponent",
            "id": "component-CreateBookingComponent-71e7143721b0a1cbfaf0d40548e65a0b",
            "file": "src/app/bookings/create-booking/create-booking.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-booking",
            "styleUrls": [
                "./create-booking.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-booking.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "selectedMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "\"select\" | \"random\""
                },
                {
                    "name": "selectedPlace",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Place"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgForm",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'f', {static: true}"
                        }
                    ]
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "datesValid",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBookPlace",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { Place } from 'src/app/places/place.model';\n\n@Component({\n  selector: 'app-create-booking',\n  templateUrl: './create-booking.component.html',\n  styleUrls: ['./create-booking.component.scss'],\n})\nexport class CreateBookingComponent implements OnInit {\n\n  @Input() selectedPlace: Place;\n  @Input() selectedMode: 'select' | 'random';\n  @ViewChild('f', {static: true}) form: NgForm;\n  startDate: string;\n  endDate: string;\n\n  constructor(private modalCtrl: ModalController) { }\n\n  ngOnInit() {\n    const availableFrom = new Date(this.selectedPlace.availableFrom);\n    const availableTo = new Date(this.selectedPlace.availableTo);\n    if(this.selectedMode === 'random') {\n      this.startDate = new Date(availableFrom.getTime() + Math.random() * (availableTo.getTime() - 7 * 24 * 60 * 60 * 1000 - availableFrom.getTime())).toISOString();\n      this.endDate = new Date(new Date(this.startDate).getTime() + Math.random() * (new Date(this.startDate).getTime() + 6 * 24 * 60 * 60 * 1000 - new Date(this.startDate).getTime())).toISOString();\n    }\n  }\n\n  onCancel() {\n    // this.modalCtrl.dismiss('m1');\n    this.modalCtrl.dismiss(null, 'cancel');\n  }\n\n  onBookPlace() {\n    if (!this.form.valid || this.datesValid()) {\n      return;\n    }\n    // this.modalCtrl.dismiss({message: 'this is a dummy'}, 'confirm');\n    this.modalCtrl.dismiss(\n      {\n        bookingData: {\n          firstName: this.form.value['first-name'],\n          lastName: this.form.value['last-name'],\n          guestNumber: this.form.value['guest-humber'],\n          startDate: this.form.value['date-from'],\n          endDate: this.form.value['date-to']\n        }\n      },\n      'confirm'\n    );\n  }\n\n  datesValid() {\n    const startDate = this.form.value['date-from'];\n    const endDate = this.form.value['date-to'];\n    return endDate > startDate;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./create-booking.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalCtrl",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "modalCtrl",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar>\n    <ion-title>{{ selectedPlace.title }}</ion-title>\n    <ion-buttons slot=\"primary\">\n      <ion-button (click)=\"onCancel()\">\n        <ion-icon name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-text-center ion-padding\">\n  <form (ngSubmit)=\"onBookPlace()\" #f=\"ngForm\">\n    <ion-grid>\n      <ion-row>\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">First Name</ion-label>\n            <ion-input type=\"text\" ngModel name=\"first-name\" required></ion-input>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">Last Name</ion-label>\n            <ion-input type=\"text\" ngModel name=\"last-name\" required></ion-input>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">Number of Guests</ion-label>\n            <ion-select name=\"guest-number\" [ngModel]=\"2\">\n              <ion-select-option value=\"1\">1</ion-select-option>\n              <ion-select-option value=\"2\">2</ion-select-option>\n              <ion-select-option value=\"3\">3</ion-select-option>\n            </ion-select>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size-sm=\"3\" offset-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">From</ion-label>\n            <ion-datetime display-format=\"MMM DD YYYY\" picker-format=\"YY MMM DD\" [min]=\"selectedPlace.availableFrom.toISOString()\" [max]=\"selectedPlace.availableTo.toISOString()\" [ngModel]=\"startDate\" name=\"date-form\" required #startDateCtrl=\"ngModel\"></ion-datetime>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">To</ion-label>\n            <ion-datetime display-format=\"MMM DD YYYY\" picker-format=\"YY MMM DD\" [min]=\"startDateCtrl.value\" [max]=\"selectedPlace.availableTo.toISOString()\" [ngModel]=\"endDate\" name=\"date-to\" required></ion-datetime>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size-sm=\"3\" offset-sm=\"3\">\n          <ion-button color=\"primary\" type=\"submit\" expand=\"block\" [disabled]=\"!f.valid || !datesValid()\">Book!</ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </form>\n</ion-content>\n"
        },
        {
            "name": "DiscoverPage",
            "id": "component-DiscoverPage-6a764378260de8c7cb3af21fddc3c5aa",
            "file": "src/app/places/discover/discover.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-discover",
            "styleUrls": [
                "./discover.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./discover.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "listedLoadedPlaces",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Place[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "loadedPlaces",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Place[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "placeSub",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFilterUpdate",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n// import { SegmentChangeEventDetail } from '@ionic/core';\n\nimport { Place } from '../place.model';\nimport { PlacesService } from '../places.service';\n\n@Component({\n  selector: 'app-discover',\n  templateUrl: './discover.page.html',\n  styleUrls: ['./discover.page.scss'],\n})\nexport class DiscoverPage implements OnInit, OnDestroy {\n\n  loadedPlaces: Place[];\n  listedLoadedPlaces: Place[];\n  private placeSub: Subscription;\n\n  constructor(private placesService: PlacesService, private menuCtrl: MenuController) { }\n\n  ngOnInit() {\n    this.placeSub = this.placesService.places.subscribe(places => {\n      this.loadedPlaces = places;\n      this.listedLoadedPlaces = this.loadedPlaces.slice(1);\n    });\n  }\n\n  // onFilterUpdate(event: CustomEvent<SegmentChangeEventDetail>) {\n  //   console.log(event.detail);\n  // }\n  onFilterUpdate(event: any) {\n    console.log(event.detail);\n  }\n\n  ngOnDestroy() {\n    if(this.placeSub) {\n      this.placeSub.unsubscribe();\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./discover.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "menuCtrl",
                        "type": "MenuController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "menuCtrl",
                        "type": "MenuController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Discover Places</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-segment (ionChange)=\"onFilterUpdate($event)\">\n    <ion-segment-button value=\"all\" checked>All Places</ion-segment-button>\n    <ion-segment-button value=\"bookable\">Bookable Places</ion-segment-button>\n  </ion-segment>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"12\" size-sm=\"8\" offset-sm=\"2\" class=\"ion-text-center\">\n        <ion-card>\n          <ion-card-header>\n            <ion-card-title>{{ loadedPlaces[0].title }}</ion-card-title>\n            <ion-card-subtitle>{{ loadedPlaces[0].price | currency }} / Night</ion-card-subtitle>\n          </ion-card-header>\n          <ion-img [src]=\"loadedPlaces[0].imageUrl\"></ion-img>\n          <ion-card-content>\n            <p>\n              <ion-text color=\"danger\">{{ loadedPlaces[0].description }}</ion-text>\n            </p>\n          </ion-card-content>\n          <div class=\"ion-text-right\">\n            <ion-button\n              fill=\"clear\"\n              color=\"primary\"\n              routerDirection=\"forward\"\n              [routerLink]=\"['/', 'places', 'tabs', 'discover', loadedPlaces[0].id]\"\n            >\n              More\n            </ion-button>\n          </div>\n        </ion-card>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col size=\"12\" size-sm=\"8\" offset-sm=\"2\" class=\"ion-text-center\">\n        <ion-virtual-scroll [items]=\"listedLoadedPlaces\" approxItemHeight=\"70px\">\n          <ion-item\n            *virtualItem=\"let place\"\n            [routerLink]=\"place.id\"\n            detail\n          >\n            <ion-thumbnail slot=\"start\">\n              <ion-img [src]=\"place.imageUrl\"></ion-img>\n            </ion-thumbnail>\n            <ion-label>\n              <h2>{{ place.title }}</h2>\n              <p>{{ place.description }}</p>\n            </ion-label>\n          </ion-item>\n        </ion-virtual-scroll>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n"
        },
        {
            "name": "EditOfferPage",
            "id": "component-EditOfferPage-30c37446709896758b0f40c50c373082",
            "file": "src/app/places/offers/edit-offer/edit-offer.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-offer",
            "styleUrls": [
                "./edit-offer.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-offer.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "place",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Place",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "placeSub",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUpdateOffer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoadingController, NavController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { Place } from '../../place.model';\nimport { PlacesService } from '../../places.service';\n\n@Component({\n  selector: 'app-edit-offer',\n  templateUrl: './edit-offer.page.html',\n  styleUrls: ['./edit-offer.page.scss'],\n})\nexport class EditOfferPage implements OnInit, OnDestroy {\n\n  place: Place;\n  form: FormGroup;\n  placeSub: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private placesService: PlacesService,\n    private navCtrl: NavController,\n    private router: Router,\n    private loadingCtrl: LoadingController,\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      if(!param.placeId){\n        this.navCtrl.navigateBack('/places/tabs/offers');\n        return;\n      }\n\n      this.placeSub = this.placesService.getPlace(param.placeId).subscribe(place => {\n        this.place = place;\n        this.form = new FormGroup({\n          title: new FormControl(this.place.title, {\n            updateOn: 'blur',\n            validators: [Validators.required],\n          }),\n          description: new FormControl(this.place.description, {\n            updateOn: 'blur',\n            validators: [Validators.required, Validators.maxLength(180)],\n          }),\n        });\n      });\n\n    });\n  }\n\n  onUpdateOffer() {\n    if(!this.form.valid) {\n      return;\n    }\n    this.loadingCtrl.create({\n      message: 'Updating places...',\n    }).then(loadingEl => {\n      loadingEl.present();\n      this.placesService.updatePlace(\n        this.place.id,\n        this.form.value.title,\n        this.form.value.description,\n      ).subscribe(() => {\n        loadingEl.dismiss();\n        this.form.reset();\n        this.router.navigate(['/places/tabs/offers']);\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.placeSub) {\n      this.placeSub.unsubscribe();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./edit-offer.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navCtrl",
                        "type": "NavController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingCtrl",
                        "type": "LoadingController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navCtrl",
                        "type": "NavController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingCtrl",
                        "type": "LoadingController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button [defaultHref]=\"'/places/tabs/offers/' + place.id\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Edit Offer</ion-title>\n    <ion-buttons slot=\"primary\">\n      <ion-button (click)=\"onUpdateOffer()\" [disabled]=\"!form.valid\">\n        <ion-icon name=\"checkmark\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <form [formGroup]=\"form\">\n    <ion-grid>\n      <ion-row>\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">Title</ion-label>\n            <ion-input type=\"text\" autocomplete autocorrect formControlName=\"title\"></ion-input>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">Short Description</ion-label>\n            <ion-textarea rows=\"3\" formControlName=\"description\"></ion-textarea>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row *ngIf=\"!form.get('description').valid && form.get('description').touched\">\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <p>Description must not be between 1 and 180 characters.</p>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </form>\n</ion-content>\n"
        },
        {
            "name": "HomePage",
            "id": "component-HomePage-ce9321056bebc0d00de68e97f73791a6",
            "file": "src/app/home/home.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "home.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "home.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  constructor() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#container {\n  text-align: center;\n\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}",
                    "styleUrl": "home.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>\n      Blank\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Blank</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <div id=\"container\">\n    <strong>Ready to create an app?</strong>\n    <p>Start with Ionic <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ionicframework.com/docs/components\">UI Components</a></p>\n  </div>\n</ion-content>\n"
        },
        {
            "name": "NewOfferPage",
            "id": "component-NewOfferPage-b118188290dc073b7588239584803911",
            "file": "src/app/places/offers/new-offer/new-offer.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-offer",
            "styleUrls": [
                "./new-offer.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-offer.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCreateOffer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { PlacesService } from '../../places.service';\n\n@Component({\n  selector: 'app-new-offer',\n  templateUrl: './new-offer.page.html',\n  styleUrls: ['./new-offer.page.scss'],\n})\nexport class NewOfferPage implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n    private placesService: PlacesService,\n    private router: Router,\n    private loaderCtrl: LoadingController,\n  ) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      title: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [Validators.required],\n      }),\n      description: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [Validators.required, Validators.maxLength(180)],\n      }),\n      price: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      dateFrom: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [Validators.required],\n      }),\n      dateTo: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [Validators.required],\n      }),\n    });\n\n    setTimeout(() => {\n      const login = this.form.controls.title;\n      login.setErrors({\n        notUnique: true\n      });\n      login.markAsTouched();\n    });\n\n  }\n\n  onCreateOffer(){\n    if(!this.form.valid) {\n      return;\n    }\n    this.loaderCtrl.create({\n      message: 'Creating place...',\n    }).then(loadingEl => {\n      loadingEl.present();\n      this.placesService.addPlace(\n        this.form.value.title,\n        this.form.value.description,\n        +this.form.value.price, //add \"+\" to change string to number type\n        new Date(this.form.value.dateFrom),\n        new Date(this.form.value.dateTo),\n      ).subscribe(() => {\n        loadingEl.dismiss();\n        this.form.reset();\n        this.router.navigate(['/places/tabs/offers']);\n      });\n    });\n\n\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./new-offer.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loaderCtrl",
                        "type": "LoadingController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loaderCtrl",
                        "type": "LoadingController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/places/tabs/offers\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>New Offer</ion-title>\n    <ion-buttons slot=\"primary\">\n      <ion-button (click)=\"onCreateOffer()\" [disabled]=\"!form.valid\">\n        <ion-icon name=\"checkmark\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"form\">\n    <ion-grid>\n      <ion-row>\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">Title</ion-label>\n            <ion-input type=\"text\" autocomplete autocorrect formControlName=\"title\"></ion-input>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">Short Description</ion-label>\n            <ion-textarea rows=\"3\" formControlName=\"description\"></ion-textarea>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row *ngIf=\"!form.get('description').valid && form.get('description').touched\">\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <p>Description must not be between 1 and 180 characters.</p>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size-sm=\"6\" offset-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">Price</ion-label>\n            <ion-input type=\"number\" formControlName=\"price\"></ion-input>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n      <ion-row>\n        <ion-col size-sm=\"3\" offset-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">Available from</ion-label>\n            <ion-datetime min=\"2019-01-01\" max=\"2025-12-31\" formControlName=\"dateFrom\"></ion-datetime>\n          </ion-item>\n        </ion-col>\n        <ion-col size-sm=\"3\">\n          <ion-item>\n            <ion-label position=\"floating\">Available to</ion-label>\n            <ion-datetime min=\"2019-01-02\" max=\"2025-12-31\" formControlName=\"dateTo\"></ion-datetime>\n          </ion-item>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </form>\n</ion-content>\n"
        },
        {
            "name": "OfferBookingsPage",
            "id": "component-OfferBookingsPage-3e21168ea32e5a76c4784114fbb2448f",
            "file": "src/app/places/offers/offer-bookings/offer-bookings.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-offer-bookings",
            "styleUrls": [
                "./offer-bookings.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./offer-bookings.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "place",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Place",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "placeSub",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { Place } from '../../place.model';\nimport { PlacesService } from '../../places.service';\n\n@Component({\n  selector: 'app-offer-bookings',\n  templateUrl: './offer-bookings.page.html',\n  styleUrls: ['./offer-bookings.page.scss'],\n})\nexport class OfferBookingsPage implements OnInit, OnDestroy {\n\n  place: Place;\n  private placeSub: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private navCtrl: NavController,\n    private placesService: PlacesService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      if(!param.placeId){\n        this.navCtrl.navigateBack('/places/tabs/offers');\n        return;\n      }\n\n      // this.place=this.placesService.places.find(p => p.id === param.placeId);\n      this.placeSub = this.placesService.getPlace(param.placeId).subscribe(place => {\n        this.place = place;\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.placeSub) {\n      this.placeSub.unsubscribe();\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./offer-bookings.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navCtrl",
                        "type": "NavController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navCtrl",
                        "type": "NavController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/places/tabs/offers\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>{{ place.title }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-button class=\"ion-margin\" color=\"primary\" [routerLink]=\"['../edit', place.id]\">Edit</ion-button>\n</ion-content>\n"
        },
        {
            "name": "OfferItemComponent",
            "id": "component-OfferItemComponent-9212ea419a79bc6a908f3173bed89f9d",
            "file": "src/app/places/offers/offer-item/offer-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-offer-item",
            "styleUrls": [
                "./offer-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./offer-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "offer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Place"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Place } from '../../place.model';\n\n@Component({\n  selector: 'app-offer-item',\n  templateUrl: './offer-item.component.html',\n  styleUrls: ['./offer-item.component.scss'],\n})\nexport class OfferItemComponent implements OnInit {\n  @Input() offer: Place;\n\n  constructor() { }\n\n  ngOnInit() {}\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h1 {\n  font-size: 18px;\n  border: 1px solid var(--ion-color-primary);\n  padding: 8px;\n  border-radius: 5px;\n  color: var(--ion-color-primary);\n}\n\n.offer-details {\n  display: flex;\n  align-items: center;\n\n  .space-left {\n    margin-left: 5px;\n  }\n}\n",
                    "styleUrl": "./offer-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-item>\n  <ion-thumbnail slot=\"start\">\n    <ion-img [src]=\"offer.imageUrl\"></ion-img>\n  </ion-thumbnail>\n  <ion-label>\n    <h1>{{ offer.title }}</h1>\n    <div class=\"offer-details\">\n      <ion-icon name=\"calendar\" color=\"primary\"></ion-icon>\n      <ion-text color=\"tertiary\" class=\"space-left\">{{ offer.availableFrom | date }}</ion-text>\n      <span class=\"space-left\">to</span>\n      <ion-icon name=\"calendar\" class=\"space-left\" color=\"primary\"></ion-icon>\n      <ion-text color=\"tertiary\" class=\"space-left\">{{ offer.availableTo| date }}</ion-text>\n    </div>\n  </ion-label>\n</ion-item>\n"
        },
        {
            "name": "OffersPage",
            "id": "component-OffersPage-404365e3286a9374eb55019198bf7831",
            "file": "src/app/places/offers/offers.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-offers",
            "styleUrls": [
                "./offers.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./offers.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "offers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Place[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "placesSub",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "offerId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "slidingItem",
                            "type": "IonItemSliding",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "offerId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "slidingItem",
                            "type": "IonItemSliding",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IonItemSliding } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { Place } from '../place.model';\nimport { PlacesService } from '../places.service';\n\n@Component({\n  selector: 'app-offers',\n  templateUrl: './offers.page.html',\n  styleUrls: ['./offers.page.scss'],\n})\nexport class OffersPage implements OnInit, OnDestroy {\n  offers: Place[];\n  private placesSub: Subscription;\n\n  constructor(\n    private placesService: PlacesService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.placesSub = this.placesService.places.subscribe(places => {\n      this.offers = places;\n    });\n  }\n\n  onEdit(offerId: string, slidingItem: IonItemSliding) {\n    slidingItem.close();\n    this.router.navigate(['/', 'places', 'tabs', 'offers', 'edit', offerId]);\n  }\n\n  ngOnDestroy() {\n    if(this.placesSub) {\n      this.placesSub.unsubscribe();\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./offers.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>My Offers</ion-title>\n    <ion-buttons slot=\"primary\">\n      <ion-button routerLink=\"new\">\n        <ion-icon name=\"add\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"12\" size-sm=\"8\" offset-sm=\"2\">\n        <ion-list>\n          <ion-item-sliding *ngFor=\"let offer of offers\" [routerLink]=\"offer.id\" #slidingItem>\n            <app-offer-item [offer]=\"offer\"></app-offer-item>\n            <ion-item-options side=\"start\">\n              <ion-item-option color=\"secondary\" (click)=\"onEdit(offer.id, slidingItem)\">\n                <ion-icon name=\"create\" slot=\"icon-only\"></ion-icon>\n                <!-- Edit -->\n              </ion-item-option>\n            </ion-item-options>\n            <ion-item-options side=\"end\">\n              <ion-item-option color=\"secondary\" (click)=\"onEdit(offer.id, slidingItem)\">\n                <ion-icon name=\"create\" slot=\"icon-only\"></ion-icon>\n              </ion-item-option>\n            </ion-item-options>\n          </ion-item-sliding>\n        </ion-list>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n"
        },
        {
            "name": "PlaceDetailPage",
            "id": "component-PlaceDetailPage-03ada3738f108f0485fb5ebb7c3884b3",
            "file": "src/app/places/discover/place-detail/place-detail.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-place-detail",
            "styleUrls": [
                "./place-detail.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./place-detail.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "place",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Place",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "placeSub",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBookPlace",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openBookingModal",
                    "args": [
                        {
                            "name": "mode",
                            "type": "\"select\" | \"random\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "\"select\" | \"random\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActionSheetController, IonRouterOutlet, ModalController, NavController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { CreateBookingComponent } from '../../../bookings/create-booking/create-booking.component';\nimport { Place } from '../../place.model';\nimport { PlacesService } from '../../places.service';\n\n@Component({\n  selector: 'app-place-detail',\n  templateUrl: './place-detail.page.html',\n  styleUrls: ['./place-detail.page.scss'],\n})\nexport class PlaceDetailPage implements OnInit, OnDestroy {\n\n  place: Place;\n  private placeSub: Subscription;\n\n  constructor(\n    private navCtrl: NavController,\n    private route: ActivatedRoute,\n    private placesService: PlacesService,\n    private modalCtrl: ModalController,\n    private actionSheetCtrl: ActionSheetController,\n    private routerOutlet: IonRouterOutlet,\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      if(!param.placeId){\n        this.navCtrl.navigateBack('/places/tabs/discover');\n        return;\n      }\n\n      this.placeSub = this.placesService.getPlace(param.placeId).subscribe(place => {\n        this.place = place;\n      });\n    });\n\n  }\n\n  onBookPlace(){\n    // this.router.navigateByUrl('/places/tabs/discover');\n    // this.navCtrl.navigateBack('/places/tabs/discover');\n    // this.navCtrl.pop();\n    this.actionSheetCtrl.create({\n      header: 'Choose an Action',\n      buttons: [\n        {\n          text: 'Select Date',\n          handler: () => {\n            this.openBookingModal('select');\n          },\n        },\n        {\n          text: 'Random Date',\n          handler: () => {\n            this.openBookingModal('random');\n          },\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n      ]\n    }).then(actionSheetEl => {\n      actionSheetEl.present();\n    });\n\n  }\n\n  openBookingModal(mode: 'select' | 'random') {\n    console.log(mode);\n    this.modalCtrl.create({\n      component: CreateBookingComponent,\n      // swipeToClose: true,\n      // showBackdrop: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps: {\n        selectedPlace: this.place,\n        selectedMode: mode,\n      },\n      // id: 'm1'\n    }).then(modalEl => {\n      modalEl.present();\n      return modalEl.onDidDismiss();\n    }).then(resultData => {\n      console.log(resultData.data, resultData.role);\n      if(resultData.role === 'confirm') {\n        console.log('BOOKED');\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if(this.placeSub){\n      this.placeSub.unsubscribe();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./place-detail.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "navCtrl",
                        "type": "NavController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalCtrl",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actionSheetCtrl",
                        "type": "ActionSheetController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "routerOutlet",
                        "type": "IonRouterOutlet",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "navCtrl",
                        "type": "NavController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "placesService",
                        "type": "PlacesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalCtrl",
                        "type": "ModalController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actionSheetCtrl",
                        "type": "ActionSheetController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "routerOutlet",
                        "type": "IonRouterOutlet",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/places/tabs/discover\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>{{ place.title }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-button color=\"primary\" class=\"ion-margin\" (click)=\"onBookPlace()\">Book</ion-button>\n</ion-content>\n"
        },
        {
            "name": "PlacesPage",
            "id": "component-PlacesPage-2f980b0d6f4f4c07ddf3116d8acfde09",
            "file": "src/app/places/places.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-places",
            "styleUrls": [
                "./places.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./places.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-places',\n  templateUrl: './places.page.html',\n  styleUrls: ['./places.page.scss'],\n})\nexport class PlacesPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./places.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-tabs>\n  <ion-tab-bar slot=\"bottom\">\n    <ion-tab-button tab=\"discover\">\n      <ion-label>Discover</ion-label>\n      <ion-icon name=\"search\"></ion-icon>\n    </ion-tab-button>\n    <ion-tab-button tab=\"offers\">\n      <ion-label>Offers</ion-label>\n      <ion-icon name=\"card\"></ion-icon>\n    </ion-tab-button>\n  </ion-tab-bar>\n</ion-tabs>\n"
        },
        {
            "name": "RecipeDetailPage",
            "id": "component-RecipeDetailPage-4da10b6ce8b0617504c9a4c719a4bb3c",
            "file": "src/app/recipes/recipe-detail/recipe-detail.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-recipe-detail",
            "styleUrls": [
                "./recipe-detail.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recipe-detail.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loadedRecipe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Recipe",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteRecipe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { Recipe } from '../recipe.model';\nimport { RecipesService } from '../recipes.service';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.page.html',\n  styleUrls: ['./recipe-detail.page.scss'],\n})\nexport class RecipeDetailPage implements OnInit {\n\n  loadedRecipe: Recipe;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private recipesService: RecipesService,\n    private router: Router,\n    private alertCtrl: AlertController,\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(param => {\n      if(!param.recipeId){\n        this.router.navigate(['/recipes']);\n        return;\n      }\n\n      const recipeId=param.recipeId;\n      this.loadedRecipe=this.recipesService.getRecipe(recipeId);\n    });\n  }\n\n  onDeleteRecipe() {\n    this.alertCtrl.create({\n       header: 'Are you sure?',\n       message:  'Do you really want to delete the recipe?',\n       buttons: [{\n         text: 'Cancel',\n         role: 'cancel'\n       }, {\n         text: 'Delete',\n         handler: () => {\n          this.recipesService.deleteRecipe(this.loadedRecipe.id);\n          this.router.navigate(['/recipes']);\n         }\n       }],\n    }).then(alertEl => {\n      alertEl.present();\n    });\n\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./recipe-detail.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "recipesService",
                        "type": "RecipesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "alertCtrl",
                        "type": "AlertController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "recipesService",
                        "type": "RecipesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "alertCtrl",
                        "type": "AlertController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>{{ loadedRecipe.title }}</ion-title>\n    <ion-buttons slot=\"primary\">\n      <ion-button (click)=\"onDeleteRecipe()\">\n        <ion-icon name=\"trash\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-grid class=\"ion-no-padding\">\n    <ion-row>\n      <ion-col class=\"ion-no-padding\">\n        <ion-img [src]=\"loadedRecipe.imageUrl\"></ion-img>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-list>\n          <ion-item *ngFor=\"let ig of loadedRecipe.ingredients\">{{ ig }}</ion-item>\n        </ion-list>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n"
        },
        {
            "name": "RecipeItemComponent",
            "id": "component-RecipeItemComponent-63449353220e7bf90481483a5d182665",
            "file": "src/app/recipes/recipe-item/recipe-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-recipe-item",
            "styleUrls": [
                "./recipe-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recipe-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "recipeItem",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Recipe } from '../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.scss'],\n})\nexport class RecipeItemComponent implements OnInit {\n  // @Input() recipeItem: Recipe;\n  @Input() recipeItem: any = {}; //暴力解測試Bug\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./recipe-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-item [routerLink]=\"['/recipes', recipeItem.id]\">\n  <ion-avatar slot=\"start\">\n    <ion-img [src]=\"recipeItem.imageUrl\"></ion-img>\n  </ion-avatar>\n  <ion-label> {{ recipeItem.title }} </ion-label>\n</ion-item>\n"
        },
        {
            "name": "RecipesPage",
            "id": "component-RecipesPage-42ace6eb7a8f0434de82e1e01fffac75",
            "file": "src/app/recipes/recipes.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-recipes",
            "styleUrls": [
                "./recipes.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recipes.page.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "recipes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Recipe[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ionViewDidEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ionViewDidLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ionViewWillEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ionViewWillLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Recipe } from './recipe.model';\nimport { RecipesService } from './recipes.service';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.page.html',\n  styleUrls: ['./recipes.page.scss'],\n})\nexport class RecipesPage implements OnInit, OnDestroy {\n\n  recipes: Recipe[];\n\n  constructor(private recipesService: RecipesService) { }\n\n  ngOnInit() {\n    // this.recipes=this.recipesService.getAllRecipes();\n    console.log(this.recipes);\n  }\n\n  ionViewDidEnter(){\n    console.log('ionViewDidEnter');\n  }\n\n  ionViewWillEnter(){\n    console.log('ionViewWillEnter');\n    this.recipes=this.recipesService.getAllRecipes();\n  }\n\n  ionViewWillLeave(){\n    console.log('ionViewWillLeave');\n  }\n\n  ionViewDidLeave(){\n    console.log('ionViewDidLeave');\n  }\n\n  ngOnDestroy() {\n    console.log('ngOnDestroy');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./recipes.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "recipesService",
                        "type": "RecipesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "recipesService",
                        "type": "RecipesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-title>Recipes</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n    <app-recipe-item *ngFor=\"let recipe of recipes\" [recipeItem]=\"recipe\"></app-recipe-item>\n   </ion-list>\n</ion-content>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-4e4e17b8c848982f5aff564588d6b2b0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [BrowserModule, IonicModule.forRoot(), AppRoutingModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-63cca1b8a749b71239948fa2b3876f38",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'places/tabs/discover',\n    pathMatch: 'full',\n  },\n  {\n    path: 'recipes',\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./recipes/recipes.module').then(m => m.RecipesPageModule)\"\n      },\n      {\n        path: ':recipeId',\n        loadChildren: () => \"import('./recipes/recipe-detail/recipe-detail.module').then(m => m.RecipeDetailPageModule)\"\n      }\n    ]\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then( m => m.AuthPageModule)\"\n  },\n  {\n    path: 'places',\n    loadChildren: () => \"import('./places/places.module').then( m => m.PlacesPageModule)\",\n    canLoad: [AuthGuard]\n  },\n  {\n    path: 'bookings',\n    loadChildren: () => \"import('./bookings/bookings.module').then( m => m.BookingsPageModule)\",\n    canLoad: [AuthGuard]\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthPageModule",
            "id": "module-AuthPageModule-7bedbb66ecb5114c69cca65572631dbd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPageRoutingModule } from './auth-routing.module';\n\nimport { AuthPage } from './auth.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AuthPageRoutingModule\n  ],\n  declarations: [AuthPage]\n})\nexport class AuthPageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthPageRoutingModule",
            "id": "module-AuthPageRoutingModule-2c22798d4ffa6a73529f107a8d9ae913",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthPageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BookingsPageModule",
            "id": "module-BookingsPageModule-ea3a045cfeca7679a393086d28470b26",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/bookings/bookings.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BookingsPageRoutingModule } from './bookings-routing.module';\n\nimport { BookingsPage } from './bookings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BookingsPageRoutingModule\n  ],\n  declarations: [BookingsPage]\n})\nexport class BookingsPageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BookingsPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BookingsPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BookingsPageRoutingModule",
            "id": "module-BookingsPageRoutingModule-2e702b26164f146db6c69a2c20f696de",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/bookings/bookings-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BookingsPage } from './bookings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BookingsPageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DiscoverPageModule",
            "id": "module-DiscoverPageModule-4090eb0b8aedc44e229fa3835b23372f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/discover/discover.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DiscoverPageRoutingModule } from './discover-routing.module';\n\nimport { DiscoverPage } from './discover.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DiscoverPageRoutingModule\n  ],\n  declarations: [DiscoverPage]\n})\nexport class DiscoverPageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DiscoverPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DiscoverPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DiscoverPageRoutingModule",
            "id": "module-DiscoverPageRoutingModule-90c67bd76b6059057730f0a7ba3f72f9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/discover/discover-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DiscoverPage } from './discover.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DiscoverPage\n  },\n  {\n    path: 'place-detail',\n    loadChildren: () => \"import('./place-detail/place-detail.module').then( m => m.PlaceDetailPageModule)\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DiscoverPageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EditOfferPageModule",
            "id": "module-EditOfferPageModule-1cb5e4e24ddb0de5716df6b30758ba77",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/offers/edit-offer/edit-offer.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditOfferPageRoutingModule } from './edit-offer-routing.module';\n\nimport { EditOfferPage } from './edit-offer.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EditOfferPageRoutingModule\n  ],\n  declarations: [EditOfferPage]\n})\nexport class EditOfferPageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "EditOfferPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "EditOfferPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EditOfferPageRoutingModule",
            "id": "module-EditOfferPageRoutingModule-e08e305b732d9730257a56cded89e233",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/offers/edit-offer/edit-offer-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditOfferPage } from './edit-offer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditOfferPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditOfferPageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomePageModule",
            "id": "module-HomePageModule-d84865d8ebad41fb3c81764d7dcd91c9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomePage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HomePageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomePageRoutingModule",
            "id": "module-HomePageRoutingModule-31961f86b71a46905f7b44f9b0f9bdc9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/home/home-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewOfferPageModule",
            "id": "module-NewOfferPageModule-92bd91ea9d2994f138b815ef4c992108",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/offers/new-offer/new-offer.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewOfferPageRoutingModule } from './new-offer-routing.module';\n\nimport { NewOfferPage } from './new-offer.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    NewOfferPageRoutingModule\n  ],\n  declarations: [NewOfferPage]\n})\nexport class NewOfferPageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NewOfferPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "NewOfferPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewOfferPageRoutingModule",
            "id": "module-NewOfferPageRoutingModule-7d61a888782e8680c1efdf5fbd6d16f4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/offers/new-offer/new-offer-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewOfferPage } from './new-offer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewOfferPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewOfferPageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OfferBookingsPageModule",
            "id": "module-OfferBookingsPageModule-00f528a6a52131003203e523ac68dd30",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/offers/offer-bookings/offer-bookings.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OfferBookingsPageRoutingModule } from './offer-bookings-routing.module';\n\nimport { OfferBookingsPage } from './offer-bookings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OfferBookingsPageRoutingModule\n  ],\n  declarations: [OfferBookingsPage],\n})\nexport class OfferBookingsPageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OfferBookingsPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "OfferBookingsPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OfferBookingsPageRoutingModule",
            "id": "module-OfferBookingsPageRoutingModule-ad508eb5cb9e4da89010576720e389fb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/offers/offer-bookings/offer-bookings-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OfferBookingsPage } from './offer-bookings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OfferBookingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OfferBookingsPageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OffersPageModule",
            "id": "module-OffersPageModule-119e6dffbb2aa299e5e1ba440f24f54d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/offers/offers.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OffersPageRoutingModule } from './offers-routing.module';\n\nimport { OffersPage } from './offers.page';\nimport { OfferItemComponent } from './offer-item/offer-item.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OffersPageRoutingModule\n  ],\n  declarations: [OffersPage, OfferItemComponent]\n})\nexport class OffersPageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "OfferItemComponent"
                        },
                        {
                            "name": "OffersPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "OffersPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OffersPageRoutingModule",
            "id": "module-OffersPageRoutingModule-b5465ee5b12bc51edd08461a91f4ae20",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/offers/offers-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OffersPage } from './offers.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OffersPage\n  },\n  {\n    path: 'new-offer',\n    loadChildren: () => \"import('./new-offer/new-offer.module').then( m => m.NewOfferPageModule)\"\n  },\n  {\n    path: 'edit-offer',\n    loadChildren: () => \"import('./edit-offer/edit-offer.module').then( m => m.EditOfferPageModule)\"\n  },\n  {\n    path: 'offer-bookings',\n    loadChildren: () => \"import('./offer-bookings/offer-bookings.module').then( m => m.OfferBookingsPageModule)\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OffersPageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PlaceDetailPageModule",
            "id": "module-PlaceDetailPageModule-490603aae754e9e9b4791881b4fadc53",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/discover/place-detail/place-detail.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PlaceDetailPageRoutingModule } from './place-detail-routing.module';\n\nimport { PlaceDetailPage } from './place-detail.page';\nimport { CreateBookingComponent } from '../../../bookings/create-booking/create-booking.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PlaceDetailPageRoutingModule\n  ],\n  declarations: [PlaceDetailPage, CreateBookingComponent],\n  entryComponents: [CreateBookingComponent],\n})\nexport class PlaceDetailPageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CreateBookingComponent"
                        },
                        {
                            "name": "PlaceDetailPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PlaceDetailPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PlaceDetailPageRoutingModule",
            "id": "module-PlaceDetailPageRoutingModule-1163f85a216aaab00858b5cbca8e6ecd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/discover/place-detail/place-detail-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PlaceDetailPage } from './place-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlaceDetailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PlaceDetailPageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PlacesPageModule",
            "id": "module-PlacesPageModule-0097fdca6aa31589bddf52dcb019f5ee",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/places.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PlacesPageRoutingModule } from './places-routing.module';\n\nimport { PlacesPage } from './places.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PlacesPageRoutingModule\n  ],\n  declarations: [PlacesPage]\n})\nexport class PlacesPageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PlacesPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PlacesPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PlacesPageRoutingModule",
            "id": "module-PlacesPageRoutingModule-33ec4c70c9ffcdbb33f77e1273992e52",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/places/places-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PlacesPage } from './places.page';\n\nconst routes: Routes = [\n  // {\n  //   path: '',\n  //   component: PlacesPage\n  // },\n  // {\n  //   path: 'discover',\n  //   loadChildren: () => import('./discover/discover.module').then( m => m.DiscoverPageModule)\n  // },\n  // {\n  //   path: 'offers',\n  //   loadChildren: () => import('./offers/offers.module').then( m => m.OffersPageModule)\n  // }\n  {\n    path: 'tabs',\n    component: PlacesPage,\n    children: [{\n      path: 'discover',\n      children: [{\n        path: '',\n        loadChildren: () => \"import('./discover/discover.module').then( m => m.DiscoverPageModule)\"\n      }, {\n        path: ':placeId',\n        loadChildren: () => \"import('./discover/place-detail/place-detail.module').then( m => m.PlaceDetailPageModule)\"\n      }]\n    },{\n      path: 'offers',\n      children: [{\n        path: '',\n        loadChildren: () => \"import('./offers/offers.module').then( m => m.OffersPageModule)\"\n      }, {\n        path: 'new',\n        loadChildren: () => \"import('./offers/new-offer/new-offer.module').then( m => m.NewOfferPageModule)\"\n      }, {\n        path: 'edit/:placeId',\n        loadChildren: () => \"import('./offers/edit-offer/edit-offer.module').then( m => m.EditOfferPageModule)\"\n      }, {\n        path: ':placeId',\n        loadChildren: () => \"import('./offers/offer-bookings/offer-bookings.module').then( m => m.OfferBookingsPageModule)\"\n      }]\n    }, {\n      path: '',\n      redirectTo: '/places/tabs/discover',\n      pathMatch: 'full'\n    }]\n  }, {\n    path: '',\n    redirectTo: '/places/tabs/discover',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PlacesPageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RecipeDetailPageModule",
            "id": "module-RecipeDetailPageModule-d681e3d3116a1841b2b4b968a9cdffa1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/recipes/recipe-detail/recipe-detail.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RecipeDetailPageRoutingModule } from './recipe-detail-routing.module';\n\nimport { RecipeDetailPage } from './recipe-detail.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RecipeDetailPageRoutingModule\n  ],\n  declarations: [RecipeDetailPage]\n})\nexport class RecipeDetailPageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RecipeDetailPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RecipeDetailPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RecipeDetailPageRoutingModule",
            "id": "module-RecipeDetailPageRoutingModule-59de1126edfdf22e10033d4d0c992ad3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/recipes/recipe-detail/recipe-detail-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecipeDetailPage } from './recipe-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecipeDetailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RecipeDetailPageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RecipesPageModule",
            "id": "module-RecipesPageModule-a27b8102469df27c5f9cd5f60208280d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/recipes/recipes.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RecipesPageRoutingModule } from './recipes-routing.module';\n\nimport { RecipesPage } from './recipes.page';\nimport { RecipeItemComponent } from './recipe-item/recipe-item.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RecipesPageRoutingModule\n  ],\n  declarations: [RecipesPage, RecipeItemComponent]\n})\nexport class RecipesPageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RecipeItemComponent"
                        },
                        {
                            "name": "RecipesPage"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RecipesPageRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RecipesPageRoutingModule",
            "id": "module-RecipesPageRoutingModule-85a55b8a940db5977a7fec32383e668d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/recipes/recipes-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecipesPage } from './recipes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecipesPage\n  },\n  {\n    path: 'recipe-detail',\n    loadChildren: () => \"import('./recipe-detail/recipe-detail.module').then( m => m.RecipeDetailPageModule)\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RecipesPageRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IonButton>",
                "defaultValue": "(args: IonButton) => ({\n  props: args,\n  template: `<ion-button appButton>{{label}}</ion-button>`,\n})"
            },
            {
                "name": "Template2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IonButton>",
                "defaultValue": "(args: IonButton) => ({\n  props: args,\n  template: `<ion-button>你好</ion-button><ion-button>你好</ion-button>`,\n})"
            },
            {
                "name": "Two",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template2.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/Button.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IonButton>",
                    "defaultValue": "(args: IonButton) => ({\n  props: args,\n  template: `<ion-button appButton>{{label}}</ion-button>`,\n})"
                },
                {
                    "name": "Template2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IonButton>",
                    "defaultValue": "(args: IonButton) => ({\n  props: args,\n  template: `<ion-button>你好</ion-button><ion-button>你好</ion-button>`,\n})"
                },
                {
                    "name": "Two",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template2.bind({})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "places/tabs/discover",
                        "pathMatch": "full"
                    },
                    {
                        "path": "recipes",
                        "children": [
                            {
                                "path": "",
                                "loadChildren": "./recipes/recipes.module#RecipesPageModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/recipes/recipes-routing.module.ts",
                                                "module": "RecipesPageRoutingModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "component": "RecipesPage"
                                                    },
                                                    {
                                                        "path": "recipe-detail",
                                                        "loadChildren": "./recipe-detail/recipe-detail.module#RecipeDetailPageModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/recipes/recipe-detail/recipe-detail-routing.module.ts",
                                                                        "module": "RecipeDetailPageRoutingModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "RecipeDetailPage"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "RecipeDetailPageModule"
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "RecipesPageModule"
                                    }
                                ]
                            },
                            {
                                "path": ":recipeId",
                                "loadChildren": "./recipes/recipe-detail/recipe-detail.module#RecipeDetailPageModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [],
                                        "module": "RecipeDetailPageModule"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "auth",
                        "loadChildren": "./auth/auth.module#AuthPageModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/auth/auth-routing.module.ts",
                                        "module": "AuthPageRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "AuthPage"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AuthPageModule"
                            }
                        ]
                    },
                    {
                        "path": "places",
                        "loadChildren": "./places/places.module#PlacesPageModule",
                        "canLoad": [
                            "AuthGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/places/places-routing.module.ts",
                                        "module": "PlacesPageRoutingModule",
                                        "children": [
                                            {
                                                "path": "tabs",
                                                "component": "PlacesPage",
                                                "children": [
                                                    {
                                                        "path": "discover",
                                                        "children": [
                                                            {
                                                                "path": "",
                                                                "loadChildren": "./discover/discover.module#DiscoverPageModule",
                                                                "children": [
                                                                    {
                                                                        "kind": "module",
                                                                        "children": [
                                                                            {
                                                                                "name": "routes",
                                                                                "filename": "src/app/places/discover/discover-routing.module.ts",
                                                                                "module": "DiscoverPageRoutingModule",
                                                                                "children": [
                                                                                    {
                                                                                        "path": "",
                                                                                        "component": "DiscoverPage"
                                                                                    },
                                                                                    {
                                                                                        "path": "place-detail",
                                                                                        "loadChildren": "./place-detail/place-detail.module#PlaceDetailPageModule",
                                                                                        "children": [
                                                                                            {
                                                                                                "kind": "module",
                                                                                                "children": [
                                                                                                    {
                                                                                                        "name": "routes",
                                                                                                        "filename": "src/app/places/discover/place-detail/place-detail-routing.module.ts",
                                                                                                        "module": "PlaceDetailPageRoutingModule",
                                                                                                        "children": [
                                                                                                            {
                                                                                                                "path": "",
                                                                                                                "component": "PlaceDetailPage"
                                                                                                            }
                                                                                                        ],
                                                                                                        "kind": "module"
                                                                                                    }
                                                                                                ],
                                                                                                "module": "PlaceDetailPageModule"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                ],
                                                                                "kind": "module"
                                                                            }
                                                                        ],
                                                                        "module": "DiscoverPageModule"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "path": ":placeId",
                                                                "loadChildren": "./discover/place-detail/place-detail.module#PlaceDetailPageModule",
                                                                "children": [
                                                                    {
                                                                        "kind": "module",
                                                                        "children": [],
                                                                        "module": "PlaceDetailPageModule"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "offers",
                                                        "children": [
                                                            {
                                                                "path": "",
                                                                "loadChildren": "./offers/offers.module#OffersPageModule",
                                                                "children": [
                                                                    {
                                                                        "kind": "module",
                                                                        "children": [
                                                                            {
                                                                                "name": "routes",
                                                                                "filename": "src/app/places/offers/offers-routing.module.ts",
                                                                                "module": "OffersPageRoutingModule",
                                                                                "children": [
                                                                                    {
                                                                                        "path": "",
                                                                                        "component": "OffersPage"
                                                                                    },
                                                                                    {
                                                                                        "path": "new-offer",
                                                                                        "loadChildren": "./new-offer/new-offer.module#NewOfferPageModule",
                                                                                        "children": [
                                                                                            {
                                                                                                "kind": "module",
                                                                                                "children": [
                                                                                                    {
                                                                                                        "name": "routes",
                                                                                                        "filename": "src/app/places/offers/new-offer/new-offer-routing.module.ts",
                                                                                                        "module": "NewOfferPageRoutingModule",
                                                                                                        "children": [
                                                                                                            {
                                                                                                                "path": "",
                                                                                                                "component": "NewOfferPage"
                                                                                                            }
                                                                                                        ],
                                                                                                        "kind": "module"
                                                                                                    }
                                                                                                ],
                                                                                                "module": "NewOfferPageModule"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "path": "edit-offer",
                                                                                        "loadChildren": "./edit-offer/edit-offer.module#EditOfferPageModule",
                                                                                        "children": [
                                                                                            {
                                                                                                "kind": "module",
                                                                                                "children": [
                                                                                                    {
                                                                                                        "name": "routes",
                                                                                                        "filename": "src/app/places/offers/edit-offer/edit-offer-routing.module.ts",
                                                                                                        "module": "EditOfferPageRoutingModule",
                                                                                                        "children": [
                                                                                                            {
                                                                                                                "path": "",
                                                                                                                "component": "EditOfferPage"
                                                                                                            }
                                                                                                        ],
                                                                                                        "kind": "module"
                                                                                                    }
                                                                                                ],
                                                                                                "module": "EditOfferPageModule"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "path": "offer-bookings",
                                                                                        "loadChildren": "./offer-bookings/offer-bookings.module#OfferBookingsPageModule",
                                                                                        "children": [
                                                                                            {
                                                                                                "kind": "module",
                                                                                                "children": [
                                                                                                    {
                                                                                                        "name": "routes",
                                                                                                        "filename": "src/app/places/offers/offer-bookings/offer-bookings-routing.module.ts",
                                                                                                        "module": "OfferBookingsPageRoutingModule",
                                                                                                        "children": [
                                                                                                            {
                                                                                                                "path": "",
                                                                                                                "component": "OfferBookingsPage"
                                                                                                            }
                                                                                                        ],
                                                                                                        "kind": "module"
                                                                                                    }
                                                                                                ],
                                                                                                "module": "OfferBookingsPageModule"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                ],
                                                                                "kind": "module"
                                                                            }
                                                                        ],
                                                                        "module": "OffersPageModule"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "path": "new",
                                                                "loadChildren": "./offers/new-offer/new-offer.module#NewOfferPageModule",
                                                                "children": [
                                                                    {
                                                                        "kind": "module",
                                                                        "children": [],
                                                                        "module": "NewOfferPageModule"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "path": "edit/:placeId",
                                                                "loadChildren": "./offers/edit-offer/edit-offer.module#EditOfferPageModule",
                                                                "children": [
                                                                    {
                                                                        "kind": "module",
                                                                        "children": [],
                                                                        "module": "EditOfferPageModule"
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "path": ":placeId",
                                                                "loadChildren": "./offers/offer-bookings/offer-bookings.module#OfferBookingsPageModule",
                                                                "children": [
                                                                    {
                                                                        "kind": "module",
                                                                        "children": [],
                                                                        "module": "OfferBookingsPageModule"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "",
                                                        "redirectTo": "/places/tabs/discover",
                                                        "pathMatch": "full"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "",
                                                "redirectTo": "/places/tabs/discover",
                                                "pathMatch": "full"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "PlacesPageModule"
                            }
                        ]
                    },
                    {
                        "path": "bookings",
                        "loadChildren": "./bookings/bookings.module#BookingsPageModule",
                        "canLoad": [
                            "AuthGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/bookings/bookings-routing.module.ts",
                                        "module": "BookingsPageRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "BookingsPage"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "BookingsPageModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthPage",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/bookings/booking.module.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Booking",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/bookings/booking.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BookingService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/bookings/bookings.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookingsPage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/bookings/create-booking/create-booking.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateBookingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePage",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/places/discover/discover.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "DiscoverPage",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/places/discover/place-detail/place-detail.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlaceDetailPage",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/places/offers/edit-offer/edit-offer.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditOfferPage",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/places/offers/new-offer/new-offer.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewOfferPage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/places/offers/offer-bookings/offer-bookings.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfferBookingsPage",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/places/offers/offer-item/offer-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfferItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/places/offers/offers.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "OffersPage",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/places/place.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Place",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/places/places.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlacesPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/places/places.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PlacesService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/recipes/recipe-detail/recipe-detail.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecipeDetailPage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/recipes/recipe-item/recipe-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecipeItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/recipes/recipe.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Recipe",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/recipes/recipes.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecipesPage",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/recipes/recipes.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RecipesService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Two",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}